cluster:
  - name: "Linux"
    lastUpdate: "Oct 14, 2018"
    steps:
      - "Run `sudo apt-get install -y unzip xclip`, replacing `apt-get install`
        with your package manager's lingo if need be. Enter your user's
        passphrase when prompted."
      - "Run `mkdir -p ~/.ssh/`."
      - "Place your `sigai.student<N>.zip` archive into your `~/Downloads` folder."
      - "Run `unzip ~/Downloads/sigai.stuudent<N> -d ~/Downloads/sigai.student<N>`."
      - "Followed by `cp ~/Downloads/sigai.student<N>/sigai* ~/.ssh/`."
      - "Then execute `cat ~/Downloads/sigai.student<N>/config >> ~/.ssh/config`."
      - "Finally, run `cat ~/.ssh/sigai.student<N>_pass.txt | xclip` to copy the
        passphrase to your clipboard."
      - "Provided you're on the UCF network, you should now be able to access
        Newton using `ssh sigai.newton` and Stokes using `ssh sigai.stokes`.
        **When prompted for a passphrase, paste using `Ctrl + Shift + V`.**"
  - name: "MacOS"
    lastUpdate: "Oct 14, 2018"
    steps:
      - "Run `mkdir -p ~/.ssh/`."
      - "Place your `sigai.student<N>.zip` archive into your `~/Downloads` folder."
      - "Run `unzip ~/Downloads/sigai.stuudent<N> -d ~/Downloads/sigai.student<N>`."
      - "Followed by `cp ~/Downloads/sigai.student<N>/sigai* ~/.ssh/`."
      - "Then execute `cat ~/Downloads/sigai.student<N>/config >> ~/.ssh/config`."
      - "Finally, run `cat ~/.ssh/sigai.student<N>_pass.txt | pbcopy` to copy the
        passphrase to your clipboard."
      - "Provided you're on the UCF network, you should now be able to access
        Newton using `ssh sigai.newton` and Stokes using `ssh sigai.stokes`.
        **When prompted for a passphrase, paste using `Cmd + V`.**"
  - name: "Windows"
    notes: "**This is a lengthy, tedious, process – we highly encourage you to try
    out Linux (even in a Virtual Machine), but if Windows has a tight grip on
    you, then follow these steps.**"
    lastUpdate: "Oct 14, 2018"
    steps:
      - "Press `Win` (<i class='fab fa-windows'></i>) and search 'Turn Windows
        features on or off'"
      - "Scroll all the way down, look for 'Windows Subsystem for Linux' and activate
        the checkbox."
      - "You'll be prompted to restart, do so."
      - "Navigate to the Windows Store and download the latest version of Ubuntu (as
        of this writing, it's 18.04)."
      - "Launch 'Ubuntu 18.04' – it'll say it's installing, let it do so."
      - "Eventually, you'll be prompted for a `UNIX username` and `UNIX password`.
        **NOTE:** `UNIX password`s don't show typing, so it's not lag if you
        don't see anything!"
      - "Within this window, execute: `mkdir .ssh`."
      - "Then execute `cd .ssh`, followed by
        `touch sigai.student<N>.pem sigai.student<N>.pem.pub config`."
      - "Now press `Win + R` (<i class='fab fa-windows'></i> + R) and type:
        `%LOCALAPPDATA%\Packages`, now find a folder beginning with
        'CanonicalGroupLimited' – click it."
      - "Now navigate to `LocalState > rootfs > home > <UNIX username>`,
        `<UNIX username>` is whatever you chose when setting up Ubuntu, earlier."
      - "You should see a `.ssh` directory – if not, hop back up to those steps and
        repeat the commands."
      - "If you open `.ssh`, you should also see at least 3 files, named what you
        `touch`ed. (Keep this window open, you'll need it in a moment!)"
      - "Open a new File Explorer window and import your `sigai.student<N>.zip` file
        into your `~/Downloads`."
      - "Unzip `sigai.student<N>.zip` using File Explorer."
      - "Now select all the files matching the `touch` command from earlier, and drag
        them into the other window with your `.ssh` directory."
      - "Provided you're on the UCF network, you should now be able to access Newton
        using `ssh sigai.newton` and Stokes using `ssh sigai.stokes`."

windows:
  lastUpdate: "Feb 10, 2018"
  HyperV:
    title: "Getting Hyper-V"
    instr:
      - "Go to UCF DreamSpark."
      - "\"Sign In\" if you have an account, or \"Register\" if you don't."
      - "Click on \"Students\" > \"Microsoft Imagine Premium\" > \"Operating Systems\"."
      - "Click on \"Windows 10.\" > \"Windows 10 (Multiple Editions).\""
      - "Grab the non-UK version by clicking \"Add to Cart.\" and checkout."
      - "Make note (by copying &ndash; Ctrl + C) of the \"Product Key,\" it should be something like... \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\" (5x 5-character string)."
      - "Open up \"Settings\" and search \"Product Key,\" then paste (Ctrl + V) in the pop-up window."
      - "You'll be prompted to let Windows restart and perform some updates. Do so."
      - "Once you've been upgraded to an eligible Windows, open up the start menu (<i class=\"fab fa-windows\"></i>) and search \"Turn Windows features on\"."
      - "Scroll down to Hyper-V and click the checkbox. You'll be taken through some more boot loops. After which, you should have Hyper-V installed."
      - "Verify Hyper-V is installed by again opening the start menu (<i class=\"fab fa-windows\"></i>) and searching \"Hyper-V\", you should see a program come up. (Don't open it.)"
  Docker:
    title: "Getting Docker"
    instr:
      - "Go to the <a href=\"https://store.docker.com/editions/community/docker-ce-desktop-windows\">Docker Store</a> and download Docker."
      - "Proceed through the installation process. You'll be prompted to reboot a few times."
      - "You shouldn't encounter any errors &ndash; as you made sure you had Hyper-V first. :smile:"
      - "Open up a command line and grab the Docker image by typing <code>docker pull ucfsigai/meetings:sp18-cpu</code>."
  GitHub:
    title: "Getting GitHub"
    instr:
      - "Go to <a href=\"https://desktop.github.com/\">GitHub Desktop</a> and download GitHub Desktop."
      - "Run the installer."
      - "Open \"Git Bash\" and hop down to <strong>Step 01</strong> in <a href=\"#docker-lnx\">GitHub on Linux</a>."

macOS:
  lastUpdate: "Feb 10, 2018"
  Docker:
    title: "Getting Docker"
    instr:
      - "Go to the <a href=\"https://store.docker.com/editions/community/docker-ce-desktop-mac\">Docker Store</a> and download Docker."
      - "Proceed through the installation process."
      - "You shouldn't encounter any errors &ndash; provided you Macbook is from 2011 or later. :smile:"
      - "Open up Terminal and grab the Docker image by typing <code>docker pull ucfsigai/meetings:sp18-cpu</code>."
  GitHub:
    title: "Getting GitHub"
    instr:
      - "Go to <a href=\"https://desktop.github.com/\">GitHub Desktop</a> and download GitHub Desktop."
      - "Run the installer."
      - "Open \"Terminal\" and hop down to <strong>Step 01</strong> in <a href=\"#docker-lnx\">GitHub on Linux</a>."

linux:
  lastUpdate: "Feb 10, 2018"
  Docker:
    title: "Getting Docker"
    instr:
      - "Open up a Terminal window."
      - "Install Docker through your OS's package manager, <code>sudo apt install docker</code> on Debian-based Linux, for instance."
      - "You shouldn't encounter any errors. :smile:"
      - "In the same Terminal window, grab the Docker image by typing <code>docker pull ucfsigai/meetings:sp18-cpu</code>."
  GitHub:
    title: "Getting GitHub"
    instr:
      - "Open a Terminal window."
      - "<code>which git</code>. Unless you get \"git not found\", Git is on your machine."
      - "<code>cd /where/you/store/sigai/stuff</code>"
      - "<code>git clone https://github.com/ucfsigai/meetings meetings</code>"
      - "The \"meetings\" repository is now on your laptop."
      - "Before every meeting, you should pull this repository, if you're trying to use it during the lecture/workshops, using: <code>git pull</code>. <strong>NOTE:</strong> If you've made any changes to the repo, locally, you need to save those changes &ndash; a <code>git pull</code> will overwrite those changes."